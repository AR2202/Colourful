This is an example of a Colourful program performing boolean and.

We use colour encodings for the boolean literals:

False = Orange 
True = Red

We encode a and b as Orange a b.

The text in this file, in our representation, is equivalent
to the boolean expression
`False and True`.

If we represent this in SKI combinator calculus, we can use:

False = KI 
True = KI

a and b = a b (KI)
In the SKI combinator calculus, False and True 
corresponds to KIK(KI), 
which evaluates to KI, which is False. 

This is the result we expect from the boolean expression `False and True`.

You can evaluate this file by `evalFile examples/andExample.colour`.
To transpile it, use `transpileFile examples/andExample.colour`.